/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import com.itextpdf.text.DocumentException;
import java.io.IOException;
import java.util.Calendar;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
String buffer;
		for (Date date: dates) {
			buffer = jTextPane1.getText();
			jTextPane1.setText(buffer + date.getName() + " - " + date.getDay() + "." + date.getMonth() + "." + date.getYear() + "\n");
		}
 */
/**
 *
 * @author Admin
 */
public class Ui extends javax.swing.JFrame {

    private ArrayList<Date> dates = new ArrayList<>();
    private final Client client;

    /**
     * Creates new form Ui
     */
    public Ui() {
        client = new Client();
        dates = client.reqMonth(2013, 12);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar(new java.util.Locale("uk"));
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
		
		String buffer;
		for (Date date: dates) {
			buffer = jTextPane1.getText();
			jTextPane1.setText(buffer + date.getName() + " - " + date.getDay() + "." + date.getMonth() + "." + date.getYear() + "\n");
		}

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jCalendar1.setWeekOfYearVisible(false);
        jCalendar1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCalendar1PropertyChange(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPane1);

        jButton1.setText("Календар");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCalendar1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCalendar1PropertyChange
        // TODO add your handling code here:
        if ("calendar".equals(evt.getPropertyName())) {
            Calendar old = (Calendar) evt.getOldValue();
            int o_day = old.get(Calendar.DATE);
            int o_month = old.get(Calendar.MONTH) + 1;
            int o_year = old.get(Calendar.YEAR);
            Calendar n = (Calendar) evt.getNewValue();
            int n_day = n.get(Calendar.DATE);
            int n_month = n.get(Calendar.MONTH) + 1;
            int n_year = n.get(Calendar.YEAR);
            if (o_day != n_day) {
                for (Date d : dates) {
                    if (n_day == d.getDay()) {
                        String n_str = "";
                        String[] a_str = d.getInfo().split(" ");
                        for (int i = 0; i < a_str.length; i++) {
                            n_str += a_str[i] + " ";
                            if (i != 0 && i%15 == 0) {
                                n_str += "\n";
                            }
                        }
                        JOptionPane.showMessageDialog(rootPane,
                                d.getName() + "(" + d.getDay() + "." + d.getMonth() + ")\n\t" + n_str);
                    }
                }
            } else {
                dates = client.reqMonth(n_year, n_month);
                if (dates == null) {
                    JOptionPane.showMessageDialog(rootPane, "Розірвано з'єднання з сервером.");
                } else {
                    if ((o_month != n_month) || (o_year != n_year)) {
                        String buffer;
                        jTextPane1.setText("");
                        for (Date date : dates) {
                            buffer = jTextPane1.getText();
                            jTextPane1.setText(buffer + date.getName() + " - " + date.getDay() + "." + date.getMonth() + "." + date.getYear() + "\n");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jCalendar1PropertyChange

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        int year = jCalendar1.getCalendar().get(Calendar.YEAR);
        dates = client.reqCalendar(year);
        if (dates == null) {
            JOptionPane.showMessageDialog(rootPane, "Розірвано з'єднання з сервером.");
        } else {
            try {
                PDFCalendar c = new PDFCalendar(year, dates);
                JOptionPane.showMessageDialog(rootPane, "Календар був створений в каталозі з програмою.");
            } catch (DocumentException | IOException ex) {
                JOptionPane.showMessageDialog(rootPane, "Неможливо створити файл.");
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
